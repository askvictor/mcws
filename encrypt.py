import pyaes
import os
import base64
import hashlib

salt = base64.b64decode('ml2XwdbswuGmGLLfdd+8Zw==')

pub = 'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEGUO0ZrWHa8kOSIjrrI8Rw8RhYXyM2adkeAyFLNenNEUK16CdJgMjyjxi+zG5hCXZJHmUqRqM4x927duzyzYER/Bdh9Uh9MbN9JX5BeL35IM5YV604nXVslQHXQ3YO1Fb'
sharedSecret = base64.b64decode(
    'MIGkAgEBBDCHVJkw18P0ExyI7gK/rGzYxNju+CuuqIVYahJBB54lH1iq7AxunA3C0a4jua+C0WygBwYFK4EEACKhZANiAAQZQ7RmtYdryQ5IiOusjxHDxGFhfIzZp2R4DIUs16c0RQrXoJ0mAyPKPGL7MbmEJdkkeZSpGozjH3bt27PLNgRH8F2H1SH0xs30lfkF4vfkgzlhXrTiddWyVAddDdg7UVs=')
hash = hashlib.sha256()
hash.update(salt)
hash.update(sharedSecret)


key_256 = hash.digest()
iv=hash.digest()[0:16]

print('公钥: {0}'.format(pub))
print('私钥: {0}'.format(base64.b64encode(key_256)))
print('盐值: {0}'.format(base64.b64encode(salt)))

plaintext = "Text may be any length you wish, no padding is required"
ciphertext = b'\xf8\x1ci\x88#\xd8\x19\x9a(#V\x15\x0f\x97\x12p\x90\xaa\x8e\xc0\x11\xe5z\x8f\x90;\xadrT}g8\x16\xcf\x93\x17\x00~b\xd9\xa7|D\x16\x19\xc7\x9b\xd034+\x8e\x0b\x88\x9f7\x84\x8d\xf7\x80\x11A\x95\x9a\xea\xbf\xfcw\x87\xbd\xea\xfd\xc7l\x95\x0e\xa6\xf5\xad\xfcB\xae3\xe2\x93n-+ \xe9\xf2\xe9\x03_\xaa\xaf=\xc1\xf4\xd8\xcb;(;\x93|\x97#\x90\x06\nK\x84\xa9\x16\xca63\xaf\x1eR\x90\x82\x03\x1fe\x94\x06 \x9c\xe7\xe6\x07\xcdAZ\xe2\xf14\x88\xe6\x03\xfc\x99\xa0P=\x08j\xc17K\xba\x0b\xc5\xa2j\x10l\x14,\x11.\xfcl\x10|\xf5?uE\xe2gUq\xd1|\x93r\xf4\xa0\x19\x87+\x96}\xbc\x01\xc1j\x94},\x84B\xf6\x00\xb3\x8a8\xad^\xb7\x8a\x02\x8f\xd4\xa7\xc7\xb4O\x87\x9f6\xc8\xd0\xe9\x10@\x97\xea\xad\xea\x87:\x97\xe0\xf0@\xb2\xfdx\x04^H\xdczCf\x96\xed<\x98\x15\xb5\xde\\@\xd2\xdf\x1e w\xb3\xc6E\xd9\xb4\xe9\xa3\xa4\xfa\x91\xa5\x81\x0e\x8c\x91Bew\xcd\xbb\xdf<e\x81\x06\xbbu\xa5j\xf9\x8c\xee^\x8a\xd78x\xd1j\xd7\xdc\x1cM@\xf3\xe6\xa9\x88c_c\xe0\xea\xdfB\xea5oX\xa7\r\xaf\xdf\xcc\xff\xbcPf\xf0\xdcAx\xbe\x84\xff\xd7C8\n\xcf{\xb3\x97ve\xc13I\xd8N\xcdyM\x08\x1b\x92\xfeb\x87\xb9\x16\xd7A\xc9\xa4\xa6\xc87\x94\xf4xL\x8a\x14\x02\x9b"\xafE\xa8YH\xafq\xdf}\xcc\x02!\xfc1\x15Eu\xd1-Ee\x94\xf5\xd2\x0blg\x7f}\'\x95\x81\xf6U~\xd0jf\x01\xd8\xdb\xfe\x8e2#\x8b \x95\xc5\rk\xd3\xc4\xeaS\x0f<=\xb7\xd7\xb4.\xcb9\xce\x05\xe2\xe1\x10\x93P\xbf\xca\xb3a\x7f\xfa\xd0\xc1\xe6\xae\xfc4>\xc4R>\x8d~\xeb\x1d)\x907\x8b\x94G\xca\xf3\x16}\xefp\x07\xec"\x8e\xc5d\xe8\xb9\xa3\xa2\xe5\xc8\x83m\x80\xb2s\xdd#\x00\xdf\xc7\x03\xa5~\x97\x14\xc9\xfe\\\x92\x94q)q\x19X2\xd8\'\xebg\x92\x9a\x18\x89]\x14$\xeaQ4T\x97lfq\x90K\xff\x8b\xff\xcan~\xbf\x83\xc0&\xab\x89nR\x07\xc8}]\x9f\xe4\xb0!\xaa\x89\xe9V*\x84\xb1ll0p\x92Z\xc5\xdbt\\\xc6\xd2\x81u\xf3\x17\xf9\xd7\x03\xca\x8c|\xf8#\xdf\x12>\x7f\x1e\xbf\xac5w\xc9\xfej[I\xad\xb6\x12\xa4\x07\x9a\x04\x1a\xa5\x84v\xcd\xfa\x00\xf4[o\xd4\xe4^0\x0c\x8c\x86vV)\xacx/i8O\xc8\xa1\x1b\x95\xd3\x96\xa2\xdc\xb6\x95\xe4\xe2\xf9\x85\xefPc\xd65?\xf3\x1f\xb4d\xc1w^8\x1f\x80\xf3\xe8G\x1fk\x81\xaeb\xd7w\x86k\xf2G\xd5sz\xbe\x9f}!-\xd8\x9c\x12\xa9(\xcdCC$X\xf4\xb9\x0e\xd1F\xa2\xdc\xbf\xe4\x92\x80\x8a\x8e\xb9\x08F,t\xbb\xbb\xd3\\\xc37\xa7\xb5>)\x18)\x8c\xa6\x89Z\x02U\xa0oB;U\x0eoU1\xa3\x9a\xa2\xd0\x1e\r\x14\x08K(J5\xa2\x1c\x1cZ\xed\xd6\x8b|\xcd\xc6\xf89\xad,\x00\x8e\xe8\xc9\x00\x98q\xc9Pv|\xa5?u\x9f\x14\xcd\x86.\xa5dK\xe2O|\xca\x8b\xc5\x087\x13D\xe6u\xd0\xa7r\xb7s\xa0\xca)\xcf9\xdf\x0e_\xa6\x82\x9at\xc2\xad\xadh$a\xe0\xc4\x80-\xcc\xbat^\xedQ\xdc\xba\xf7#\xd4?\x84=\x1e\x00\xf0\xf6\x9di\xea\xae~\xdd\xcbo\xc3\xdf\x7f\x18n`\x7f\xdf\x9eFm\xeb\xc9RZm\xfbQ(\t\x8aZl\x89\xa1l\x17i\x1e\x17>\xafU\x92r\x8a\x85Ix\x03\x1a\xd6\xbd\xcf1\xacHd\x7f+v\x82\xa7\x0cF\xb3\xe3V\xbf\xd2\x18I\xc3\xdd\xba\xf4\xe1\xb2\x05\xb3\xa9`D/\xf2\xa6^\x97\x04\xfd\x0e5\x95\xe7\xa2\xe7\x84\x86\x8d\xe6\xd0\xfeL\x19\x0f,v\xc2\x1d|\xd4Z\xf6\xefv\x19\xf0^\x02`E\x04$z\x81\x11\x94w\x15\x98\x0e\xe22P\xc7\xdc?\xacEB\xb9A\xa6`8\xfa_\xcdn\x83\x83(\xb2\xbd\xd0\xc8\xf94\xb4yv#\xf5\x07\x04b\xfei\xde.w\xa2\x82I-\x9a\xad\xd6\xfeB\xf1g\xb8\x96\xb3\xf7\xfb\xec\x12\xa4(9X\x15h\xc48\xcb\xd1+v\x1c>\t\xfa?@\x81\xcc\x17\x0c\xd4F\xcb\x19.\xa6K<\xc7F\xbf\t\x0c\xe8\xe2\xcd\xed%sv\xf2k\xc4\x90e\x00)\xb48\xde\nW\x1b5\n\xd7\x1e \xfe\x07\xca@\x9d\xee\x18\xc7\x01\xe6\xe6\x8a\xc36\x1f;\xf3\x8f\x01\xe6^\x1f,q/\xb3B\xd3\x7fJ\x04\xc4\xf4\xa0\x1a\xeaG\xcfh[ei\xfd&\xb6\x13&<L\xd9\xe1\xb3\xd2\xeeC\xb5\x06\x7f\x1d\x012\xfd_\xee\xd3u_r\x1a\xe3\x04\x1a\x94o\x04\xcc\xd6\x00\xe4\x82\xde\x03\xe9\xf3\x10\x9e\xcb\x1f\xd0\xb3\xf5\xba+\x06\x8e\x8b@\'s\xa4|\x02\xab\xdb\xcd\xaaJ\x1a\x85\xaa.\xf5\x1c\xfbCb\xbdg\x0c\xd2fE\xb2\xe7\xafUD;\xc3G\x96\x8a?\xd11\x97\xcfvTlk\x87'

print(ciphertext)

aes = pyaes.AESModeOfOperationCFB(key_256, iv)
decrypted = aes.decrypt(ciphertext)
print(decrypted)

decrypted = aes.decrypt(ciphertext)
print(decrypted)